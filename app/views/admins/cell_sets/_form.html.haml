:ruby
  content_for(:custom_style) do
    "gridStyle"
  end
  content_for(:custom_script) do
    "gridEditor" if @cell_set.persisted?
  end
  options ||= {}
  options.merge!({
    publishing_logic: f.object.respond_to?(:published_flag),
  })

.form-inputs
  = render "admins/#{view_dir_for(f.object)}/form_content", f: f

  - if options[:publishing_logic]
    .bubblebox
      %section.publishing.bubble
        .page-header
          %h2= t('form.publish')
        = render 'admins/shared/publishing', f: f, resource: f.object #, no_publishing_end_date: true

.row-fluid
  - if f.object.persisted?
    %section.grid-editor.span12
      .main-content-wrapper.bubblebox
        .main-content.bubble
          .row-fluid
            #boundsForGrid
              #grid

            #tabs
              %ul
                %li
                  %a(href="#usedContentCells")= t('set.tabs.used_cells')
                %li
                  %a(href="#availableContentCells")= t('set.tabs.available_cells')


              #usedContentCells
                %h3= t('set.tabs.used_cells')
                #usedContentCellTable.cellTable

              #availableContentCells
                %h3= t('set.tabs.available_cells')
                %form#filter{ :action => "", :method => "get"}
                  %strong Filter
                  %select
                    %option(value="all") All types
                    - Cell::TYPES.each do |type|
                      %option{value: type}= type.to_s.humanize

                  containing
                  %input(type="text")
                #availableContentCellTable.cellTable
                  - @available_cells.each do |cell|
                    = render partial: 'table_cell', locals: {cell: cell}

            = render "edit_cell"

            #emptyCell.cell

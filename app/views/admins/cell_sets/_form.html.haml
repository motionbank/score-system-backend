:ruby
  content_for(:custom_style) do
    "gridStyle"
  end
  content_for(:custom_script) do
    "gridEditor"
  end
  options ||= {}
  options.merge!({
    publishing_logic: f.object.respond_to?(:published_flag),
  })


.row-fluid
  - if f.object.persisted?
    %section.grid-editor.span8
      .main-content-wrapper.bubblebox
        .main-content.bubble
          .page-header
            %h2= t('set.grid_editor')

          .row-fluid
            #boundsForGrid
              #grid
            
            #tabs
              %ul
                %li
                  %a(href="#usedContentCells")= t('set.tabs.used_cells')
                %li
                  %a(href="#availableContentCells")= t('set.tabs.available_cells')


              #usedContentCells
                %h3= t('set.tabs.used_cells')
                %table#usedContentCellTable.cellTable
                  %tr
              #availableContentCells
                %h3= t('set.tabs.available_cells')
                %table#availableContentCellTable.cellTable
                  %tbody
                    - @available_cells.each do |cell|
                      = render partial: 'table_cell', locals: {cell: cell}

            #dialog-modal.Basic.modal.dialog(title="Edit Cell")
              %form{ :action => "", :method => "post"}
                %fieldset#editCell
                  %p
                    %label{:for => "editTitle"} Title:
                    %input{:id => "editTitle", :type => "text", :name => "editTitle"}
                  %p Type
                  %p#type.textInEdit
                  %p
                    %label{:for => "editDescription"} Description:
                    %input{:id => "editDescription", :type => "text", :name => "editDescription"}
                  %p
                    %label{:for => "imagesrc"} Upload Poster Image:
                    %input{:id => "editImageSrc", :type => "text", :name => "imagesrc"}
                  %p
                    %input{:id => "deleteImage", :type => "button", :name => "deleteImage", :value => "Delete Poster Image"}
                  %p
                    /%input{:type => "submit", :value => "Save"}
                    %input{:type => "button", :value => "Save", :class => "form_submit"}
                    %input{:id => "removeCell", :type => "button", :value => "Remove Cell from Grid"}


            #emptyCell.cell


  .sidebar.span4
    .form-inputs
      = render "admins/#{view_dir_for(f.object)}/form_content", f: f

      - if options[:publishing_logic]
        .bubblebox
          %section.publishing.bubble
            .page-header
              %h2= t('form.publish')
            = render 'admins/shared/publishing', f: f, resource: f.object #, no_publishing_end_date: true
